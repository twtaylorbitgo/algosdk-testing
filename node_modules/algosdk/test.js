const algosdk = require("./src/main");

keys = algosdk.mnemonicToSecretKey("used cabin plastic shell always brain bring holiday unlock mention super soldier purchase come bicycle rail journey grow invest intact lab install hollow abstract spoil");

let Vehicle = {
    make: "Cheverolet",
    model: "Cadillac",
    year: 2017,
    miles: "34,222",
    condition: 5,
    vin: "1a2b3c4d5e6f7g"
};

vbytes = algosdk.encodeObj(Vehicle);

sigbytes = algosdk.signBytes(vbytes, keys.sk);
console.log(sigbytes.length);

 let Note =  {
    vehicleObject: vbytes,
    signature: sigbytes
};

let token = "402049a2fde425a3e0e81b41c4c32fd70104544caee916ec86adea955f04c14b";
let server = "http://3.15.4.163";
let port = 8080;

//instantiate the algod wrapper
let algodclient = new algosdk.Algod(token, server, port);


(async () => {
//submit the transaction

    //Get the relevant params from the algod
    let params = await algodclient.getTransactionParams();
    let endRound = params.lastRound + parseInt(1000);
    let sfee =  await algodclient.suggestedFee();
    console.log("FEE " + sfee.fee + " txparms " + params.fee);

    //example of how to write an object into the notefield

    //create a transaction
    let txn = {
        "from": keys.addr,
        "to": "Q7DZCXS7MVKQKJFB7KTV6PVDRRX2BDGS47QS6CQCY6W3Y3L6SOPRNWKURU",
        "fee": params.fee,
        "amount": 0,
        "firstRound": params.lastRound,
        "lastRound": endRound,
        "genesisID": params.genesisID,
        "genesisHash": params.genesishashb64,
        "note": algosdk.encodeObj(Note)
    };

    //  var signedTxn = algosdk.signTransaction(txn, keys.sk);
    //  console.log(signedTxn.txID);
    // //
    //  let tx = await algodclient.sendRawTransaction(signedTxn.blob);
    // // tx = tx.txId;
    // //
    //
    let stx = await algodclient.transactionById("NXSU4YOWBJOLKNNQTXSIAPJOQZ5L5O3BL6SOBRBFSA2WR3ISBLCQ");//"SU7H3NHDCQVPKV5UF6C2EXE3EJYJWR3XQA7EX5XAB65DF6XADVQQ");
    let o = algosdk.decodeObj(stx.note);
    console.log(algosdk.decodeObj(o.vehicleObject));
     algosdk.verifyBytes(o.vehicleObject, o.signature, "Q7DZCXS7MVKQKJFB7KTV6PVDRRX2BDGS47QS6CQCY6W3Y3L6SOPRNWKURU")
    //

})();
